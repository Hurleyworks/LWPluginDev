// This header file was auto-generated by ClassMate++
// Created: 13 Aug 2009 6:03:53 am
// Copyright (c) 2009, HurleyWorks

#pragma once

#include "PanelsEnums.h"

class Control
		/// and responsibilty of class Control
{

 public:
	
	 typedef std::shared_ptr<Control> Ptr;
 public:
	virtual ~Control ();
		/// Destroys a Control instance

	virtual ControlType getType () const = 0;

	virtual std::string getTitle () const = 0;

	int getIntValue () const;

	float getFloatValue () const;

	std::string getStringValue () const;

	Eigen::Vector3i getIntVec () const;

	void * getPointer () const;

	void setPointer(void * ptr);

	int getUserID () const;

	void setUserID (int id);

	void move (int x, int y);

	void resize (int w, int h);

	void getSize( int & w, int & h );

	void getHotSize( int & w, int & h );

	void getPosition( int & x, int & y );

	void redraw ();

	void erase ();
	
	void ghost ();

	void render ();
	
	void giveFocus ();

	void setIntValue (int value);

	void setFloatValue (float value);

	void setStringValue (const std::string & text);
	
	void setSelectionCallback (LWSelectionCallback callback);
	
	LWControlID getControlID () const;

	void setControlID (LWControl * ctrlID);

	LWPanControlDesc & getDescription ();

 protected:
	Control ();
		/// Creates a Control instance

	LWControl* controlID;
	LWPanControlDesc desc;

 private:
	int id_;

}; // end class Control

// getUserID
inline int Control::getUserID () const
{

	return id_;
}

// setUserID
inline void Control::setUserID (int id)
{

	id_ = id;
}
