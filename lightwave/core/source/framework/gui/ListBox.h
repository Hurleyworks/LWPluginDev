// This header file was auto-generated by ClassMate++
// Created: 16 Aug 2009 8:36:38 am
// Copyright (c) 2009, HurleyWorks

#pragma once

#include "Control.h"

class ListBox : public Control
		/// and responsibilty of class ListBox
{

 public:
	ListBox ( int width, 
			  int visibleElements,
			  const std::string& title,
			  LWNameCallback nameCallback,
			  LWCountCallback countCallback);
		/// Creates a ListBox instance

	~ListBox ();
		/// Destroys a ListBox instance

	std::string getTitle () const;

	ControlType getType () const;

 private:
	ControlType type_;
	std::string title_;

}; // end class ListBox


class MultiList : public Control
		/// and responsibilty of class MultiList
{

 public:
	MultiList ( int width, 
			  int visibleElements,
			  const std::string& title,
			  LWMultiListNameCallback nameCallback,
			  LWCountCallback countCallback,
			  LWColwidthCallback widthCallback);
		/// Creates a MultiList instance

	~MultiList ();
		/// Destroys a MultiList instance

	std::string getTitle () const;

	ControlType getType () const;

 private:
	ControlType type_;
	std::string title_;

}; // end class MultiList


class TreeList : public Control
		/// and responsibilty of class TreeList
{

 public:
	TreeList ( int width, 
			  int height,
			  const std::string & title,
			  LWTreeInfoCallback infoCallback,
			  LWTreeCountCallback countCallback,
			  LWTreeChildCallback childCallback);
		/// Creates a TreeList instance

	~TreeList ();
		/// Destroys a TreeList instance

	std::string getTitle () const;

	ControlType getType () const;

 private:
	ControlType type_;
	std::string title_;

}; // end class TreeList


class MultiTreelist : public Control
		/// and responsibilty of class MultiTreelist
{

 public:
	MultiTreelist (	int width, 
					int height,
					const std::string & title,
					LWMultiTreeInfoCallback infoCallback,
					LWTreeCountCallback countCallback,
					LWTreeChildCallback childCallback,
					LWColwidthCallback widthCallback);
		/// Creates a MultiTreelist instance

	~MultiTreelist ();
		/// Destroys a MultiTreelist instance

	std::string getTitle () const;

	ControlType getType () const;

 private:
	ControlType type_;
	std::string title_;

}; // end class MultiTreelist
